#!/usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import division  # so that 1/3=0.333 instead of 1/3=0
from psychopy import visual, core, data, event, logging, gui #import some libraries from PsychoPy
from psychopy import *
from psychopy.constants import *  # things like STARTED, FINISHED
from win32com.client import Dispatch #for writing stimuli onto excell file
import random #import some libraries from python
import array
import numpy
import os  # handy system and path functions

# Store info about the experiment session
expName = 'Experiment'
expInfo = {'participant':'', 'session':'001'}
dlg = gui.DlgFromDict(dictionary=expInfo, title=expName)
if dlg.OK == False: core.quit()  # user pressed cancel
expInfo['date'] = data.getDateStr()  # add a simple timestamp


# Setup files for saving
if not os.path.isdir('mydata'):
    os.makedirs('mydata')  # if this fails (e.g. permissions) we will get error
filename = 'mydata' + os.path.sep + '%s_%s' %(expInfo['participant'], expInfo['date'])
logFile = logging.LogFile(filename+'.log', level=logging.EXP)
logging.console.setLevel(logging.WARNING)  # this outputs to the screen, not a file




#variables for working memory tasks
listOfConsonants = array.array('c','BCDFGHKLMNPRSTVWZ') #list of consonants to be used during phonological and visuospatial wm trials
listSize = len(listOfConsonants)
#testLetter = 1 #indicates whether the test letter used for the phonological task will be chosen from the list of consonants above or not
testLetterPos = random.randint(0,listSize-1) #if the letter is from the list of consonants, this picks the position from the array of consonants


#variables for visuospatial working memory tasks
gridSizeX = 8 #the number of  horizontal locations a letter can pop up --> the screen is divided into invisible grids and one is chosen randomly to show the letter
gridSizeY = 8 #the number of vertical locations a letter can pop up --> the screen is divided into invisible grids and one is chosen randomly to show the letter
gridSize = gridSizeX*gridSizeY #total number of locations a letter can pop up
scale = 226/2
stepSize = scale/8 #step size for visuospatial wm task
stepSizeP = scale/10 #step size for phonological wm task


testLetter = 'O' #the test letter for visuospatial working memory answer phase

#variables for calculation tasks
calc1 = [' 17-8',' 15-7',' 17-5',' 15-6',' 13-8',' 11-7',' 13-4',' 11-3',' 15-9',' 17-8',' 13-2',' 11-3',' 6*5',' 6*5',' 6*5',' 6*5',' 7*4',' 7*4',' 7*4',' 7*4',' 8*3',' 8*3',' 8*3',' 8*3']
calc2 = [' 9  11',' 8 10',' 12  10',' 9  7',' 5  9',' 4  8',' 9  5',' 8  4',' 6  12',' 9  15',' 11  5',' 8  2',' 30  32',' 30  36',' 30  35',' 30  28',' 28  21',' 28  24',' 28  26',' 28  30',' 24  32',' 24  27',' 24  22',' 24  26']
calc3 = [' 11  9',' 10  8',' 10  12',' 7  9',' 9  5',' 8  4',' 5  9',' 4  8',' 12  6',' 15  9',' 5  11',' 2  8',' 32  30',' 36  30',' 35  30',' 28  30',' 21  28',' 24  28',' 26  28',' 30  28',' 32  24',' 27  24',' 22  24',' 26  24']
calcDur = 3.0 #the display period of calculation





# Setup the Window
##mywin = visual.Window(size=(1920, 1080), viewScale = [1,1.78], units='norm',fullscr=True, screen=0, allowGUI=False, allowStencil=False,
##    monitor='testMonitor', color=[0,0,0], colorSpace='rgb')


key_resp = event.BuilderKeyResponse()  # create an object of type KeyResponse
key_resp.status = NOT_STARTED


cont_key = event.BuilderKeyResponse() # for handling the breaks in between blocks
cont_key.status = NOT_STARTED



##############################################################################################
#-------------------base functions to be used during the experiment---------------------------
##############################################################################################
#create the stimuli to be used in the current experiment
def create_stimuli(reps):
    #file path
    file_name = 'C:\\Users\\cavdaros\\Desktop\\project\\calculations.xlsx'
    #The win32com function to open Excel
    excel           = Dispatch('Excel.Application')
    excel.Visible   = True  #If we want to see it change, it's fun
    #Open the file we want in Excel
    workbook        = excel.Workbooks.Open(file_name)
    #Extract some of the file's components we may need
    workBook    = excel.ActiveWorkbook
    activeSheet = excel.ActiveSheet
    sheets      = workBook.Sheets
    #Add another sheet for example
    sheetName = '%s_%s' %(expInfo['participant'], expInfo['date'])
    sheets.Add().Name = sheetName
    #Activate the necessary sheet, assuming we know it exists, 
    #didn't put in the test for that, just verify its exitance in 'sheets'...
    sheet = sheets(sheetName)
    sheet.Activate()


    #-----------phono-solo-----------------------------------------------------
    #first, write information regarding solo-phonological working memory trials
    #find the letters to be used for span = 3, 5, 7
    sheet.Cells(1,1).Value = 'type'
    sheet.Cells(1,2).Value = 'problem1'
    sheet.Cells(1,3).Value = 'problem2'
    sheet.Cells(1,4).Value = 'ans'

   

    line = 2
    for i in range(0,reps):
        col = 1
        sheet.Cells(line,1).Value = 'c'
        sheet.Cells(line,2).Value = calc1[i]
        if line%2 == 0: #parity check to decide whether to use calc2 or calc3 as the answer array--> determine whether the correct result will pop up on the right or left
            sheet.Cells(line,3).Value = calc2[i]
            sheet.Cells(line,4).Value = 1
        else:
            sheet.Cells(line,3).Value = calc3[i]
            sheet.Cells(line,4).Value = 0
        line = line + 1


    #To save as a different file:
    #if os.path.exists(file_name):
        #os.remove(file_name)
    workBook.SaveAs('C:\\Users\\cavdaros\\Desktop\\project\\calculations.xlsx')#change name
    #The end...
    workBook.Saved = 0 #p.248 Using VBA 5
    workBook.Close(SaveChanges=0) #to avoid prompt
    excel.Quit()
    excel.Visible = 0 
    #must make Visible=0 before del self.excelapp or EXCEL.EXE remains in memory.
    del excel




#create_stimuli(10,24)
create_stimuli(1)
#after the experiment save the data
print '\n'




